<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="6" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-11T10:27:18 IST" name="Suite" finished-at="2024-04-11T10:27:37 IST" duration-ms="19959">
    <groups>
      <group name="PurchaseOrder">
        <method signature="Standalonetset.FirstTest(java.util.HashMap)[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.Standalonetset@533bda92]" name="FirstTest" class="BhanuFrameworkPractice.FrameworkTest.Standalonetset"/>
      </group> <!-- PurchaseOrder -->
      <group name="errorHandling">
        <method signature="ErrorValidation.fourthTest()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.ErrorValidation@1b919693]" name="fourthTest" class="BhanuFrameworkPractice.FrameworkTest.ErrorValidation"/>
        <method signature="ErrorValidation.secondTest()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.ErrorValidation@1b919693]" name="secondTest" class="BhanuFrameworkPractice.FrameworkTest.ErrorValidation"/>
      </group> <!-- errorHandling -->
    </groups>
    <test started-at="2024-04-11T10:27:18 IST" name="ErrorValidation" finished-at="2024-04-11T10:27:36 IST" duration-ms="18601">
      <class name="BhanuFrameworkPractice.FrameworkTest.ErrorValidation">
        <test-method is-config="true" signature="launchapplication()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.ErrorValidation@1b919693]" started-at="2024-04-11T10:27:18 IST" name="launchapplication" finished-at="2024-04-11T10:27:23 IST" duration-ms="5871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchapplication -->
        <test-method signature="fourthTest()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.ErrorValidation@1b919693]" started-at="2024-04-11T10:27:23 IST" name="fourthTest" finished-at="2024-04-11T10:27:24 IST" duration-ms="774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourthTest -->
        <test-method is-config="true" signature="logout()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.ErrorValidation@1b919693]" started-at="2024-04-11T10:27:24 IST" name="logout" finished-at="2024-04-11T10:27:25 IST" duration-ms="1310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="launchapplication()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.ErrorValidation@1b919693]" started-at="2024-04-11T10:27:25 IST" name="launchapplication" finished-at="2024-04-11T10:27:28 IST" duration-ms="2837" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchapplication -->
        <test-method retried="true" signature="secondTest()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.ErrorValidation@1b919693]" started-at="2024-04-11T10:27:28 IST" name="secondTest" finished-at="2024-04-11T10:27:29 IST" duration-ms="961" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [ sadfaceUsername and password do not match any user in this service] but found [Epic sadface: Username and password do not match any user in this service]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [ sadfaceUsername and password do not match any user in this service] but found [Epic sadface: Username and password do not match any user in this service]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at BhanuFrameworkPractice.FrameworkTest.ErrorValidation.secondTest(ErrorValidation.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondTest -->
        <test-method is-config="true" signature="logout()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.ErrorValidation@1b919693]" started-at="2024-04-11T10:27:29 IST" name="logout" finished-at="2024-04-11T10:27:31 IST" duration-ms="1255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="launchapplication()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.ErrorValidation@1b919693]" started-at="2024-04-11T10:27:31 IST" name="launchapplication" finished-at="2024-04-11T10:27:34 IST" duration-ms="3436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchapplication -->
        <test-method signature="secondTest()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.ErrorValidation@1b919693]" started-at="2024-04-11T10:27:34 IST" name="secondTest" finished-at="2024-04-11T10:27:35 IST" duration-ms="691" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [ sadfaceUsername and password do not match any user in this service] but found [Epic sadface: Username and password do not match any user in this service]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [ sadfaceUsername and password do not match any user in this service] but found [Epic sadface: Username and password do not match any user in this service]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at BhanuFrameworkPractice.FrameworkTest.ErrorValidation.secondTest(ErrorValidation.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondTest -->
        <test-method is-config="true" signature="logout()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.ErrorValidation@1b919693]" started-at="2024-04-11T10:27:35 IST" name="logout" finished-at="2024-04-11T10:27:36 IST" duration-ms="1289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- BhanuFrameworkPractice.FrameworkTest.ErrorValidation -->
    </test> <!-- ErrorValidation -->
    <test started-at="2024-04-11T10:27:18 IST" name="Standalonetest" finished-at="2024-04-11T10:27:37 IST" duration-ms="19959">
      <class name="BhanuFrameworkPractice.FrameworkTest.Standalonetset">
        <test-method is-config="true" signature="launchapplication()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.Standalonetset@533bda92]" started-at="2024-04-11T10:27:18 IST" name="launchapplication" finished-at="2024-04-11T10:27:23 IST" duration-ms="5744" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchapplication -->
        <test-method signature="FirstTest(java.util.HashMap)[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.Standalonetset@533bda92]" started-at="2024-04-11T10:27:23 IST" name="FirstTest" data-provider="getData" finished-at="2024-04-11T10:27:25 IST" duration-ms="1185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=secret_sauce, email=standard_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FirstTest -->
        <test-method is-config="true" signature="logout()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.Standalonetset@533bda92]" started-at="2024-04-11T10:27:25 IST" name="logout" finished-at="2024-04-11T10:27:26 IST" duration-ms="1246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="launchapplication()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.Standalonetset@533bda92]" started-at="2024-04-11T10:27:26 IST" name="launchapplication" finished-at="2024-04-11T10:27:30 IST" duration-ms="3854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchapplication -->
        <test-method signature="FirstTest(java.util.HashMap)[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.Standalonetset@533bda92]" started-at="2024-04-11T10:27:30 IST" name="FirstTest" data-provider="getData" finished-at="2024-04-11T10:27:31 IST" duration-ms="900" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=secret_sauce, email=standard_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FirstTest -->
        <test-method is-config="true" signature="logout()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.Standalonetset@533bda92]" started-at="2024-04-11T10:27:31 IST" name="logout" finished-at="2024-04-11T10:27:32 IST" duration-ms="1250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="launchapplication()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.Standalonetset@533bda92]" started-at="2024-04-11T10:27:32 IST" name="launchapplication" finished-at="2024-04-11T10:27:36 IST" duration-ms="3766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchapplication -->
        <test-method signature="thirdTest()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.Standalonetset@533bda92]" started-at="2024-04-11T10:27:36 IST" name="thirdTest" finished-at="2024-04-11T10:27:36 IST" depends-on-methods="BhanuFrameworkPractice.FrameworkTest.Standalonetset.FirstTest" duration-ms="496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdTest -->
        <test-method is-config="true" signature="logout()[pri:0, instance:BhanuFrameworkPractice.FrameworkTest.Standalonetset@533bda92]" started-at="2024-04-11T10:27:36 IST" name="logout" finished-at="2024-04-11T10:27:37 IST" duration-ms="1320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- BhanuFrameworkPractice.FrameworkTest.Standalonetset -->
    </test> <!-- Standalonetest -->
  </suite> <!-- Suite -->
</testng-results>
